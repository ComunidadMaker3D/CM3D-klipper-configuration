# Mini+, which uses the Prusa Buddy board. The printer's LCD is not currently
# supported by Klipper, so the touchscreen will permanently display the
# bootloader screen after the Klipper firmware is flashed; use Fluidd, Mainsail,
# or OctoPrint etc. to control the printer.

# To use this config, the firmware should be compiled for the STM32F407. When
# running "make menuconfig", enable "extra low-level configuration setup",
# select the "128KiB + 512 byte offset" bootloader, and USB communication.
# Connect the printer to your Raspberry Pi using the printer's micro-USB port.
# If you prefer to remove Prusa's stock bootloader entirely, select the
# "No bootloader" option.

# When flashing for the first time, you will need to break the "appendix"
# on the Buddy board, then put the device into DFU mode by moving the jumper
# on the 3-pin header (older boards) or shorting the 2-pin header (newer boards)
# and resetting, and finally use "make flash" to install Klipper. Once Klipper is
# installed, you no longer need the jumper - just use "make flash" which will
# automatically put the device into DFU mode.

# Note that if you were previously running Prusa firmware, you must fully
# power cycle the board after flashing. Otherwise, Klipper will be unable to
# communicate with the TMC2209s due to the abrupt change in the baud rate,
# and will show this error: "Unable to read tmc uart register IFCNT".

# See docs/Config_Reference.md for a description of parameters.


#############################################################################################################
### CONTROL BOARD
### Pick the board you have installed and wired in your printer.
#############################################################################################################
[include config/boards/prusa-buddy/config.cfg]
#[include config/boards/btt-skr-2-429/config.cfg]
#[include config/boards/btt-octopus-11/config.cfg]
#[include config/boards/btt-octopus-11-407/config.cfg]
#[include config/boards/btt-octopus-pro-429/config.cfg]
#[include config/boards/btt-octopus-pro-446/config.cfg]
#[include config/boards/btt-skr-pro-12/config.cfg]
#[include config/boards/fysetc-spider/config.cfg]

### RPI Mcu (Necessary for dual sensor input shaping)
#[include config/boards/rpi/config.cfg]

#############################################################################################################
### BASE SETUP
#############################################################################################################
[include config/printers/prusa-mini/prusa-mini.cfg]

#############################################################################################################
### STEPPER MOTORS, DRIVERS & SPEED LIMITS
### Pick the drivers and stepper motors you're using. See the RatOS documentation for custom combinations.
#############################################################################################################
[include config/printers/prusa-mini/steppers.cfg]

# UNCOOLED TMC 2209 + LDO-42STH40-1684AC
# It is recommended that you enable these settings until you have verified that your printer moves as expected
#[include config/printers/prusa-mini/tmc2209.cfg]
[include config/printers/prusa-mini/speed-limits-basic.cfg]
[include config/steppers/ldo/42sth40-1684ac/2209/24v-0.4a-*.cfg]

# COOLED TMC 2209 + LDO-42STH40-1684AC
# It is highly recommended that you enable these settings as soon as you have verified that your printer moves 
# as expected. Actively cooled drivers are needed (ie, such as the stock prusa-mini eletronics enclosure with 
# the fan connected)
# These settings increase torque, precision and speed, and makes sure your motors perform to their maximum
# potential.
#[include config/printers/prusa-mini/tmc2209.cfg]
#[include config/printers/prusa-mini/speed-limits-performance.cfg]
#[include config/steppers/ldo/42sth40-1684ac/2209/24v-1.188a-*.cfg]

# STEALTH MODE
# NOTE: You still need to include one of the above stepper motor definitions.
# NOTE: This will make your printer quiter but less accurate, it's an inherent side effect of stealthchop.
[include config/printers/prusa-mini/tmc2209-stealth.cfg]

#############################################################################################################
### HOMING
### Pick your probe and endstops
#############################################################################################################
# BL Touch
#[include config/z-probe/bltouch.cfg]
# Inductive/Capacitive probe
[include config/z-probe/probe.cfg]

# Physical endstops
#[include config/printers/prusa-mini/physical-endstops.cfg]
# Sensorless homing (Beware: this requires manual tinkering and does not work if your x/y stepper drivers
# have clipped DIAG pins). It is strongly encouraged to use physical endstops if you're a beginner.
# If you still wish to proceed, copy config/templates/sensorless-homing.cfg to the root directory and 
# remove the # from the line below.
[include config/printers/prusa-mini/sensorless-homing-tmc2209.cfg]
[include config/homing.cfg]
#############################################################################################################
### INPUT SHAPER
### Enable/disable input shaper calibration
#############################################################################################################
# Uncomment the following line to use a single ADXL345 that you manually move between
# the X and Y axis. (Use SHAPER_CALIBRATE AXIS=X and SHAPER_CALIBRATE AXIS=Y respectively).
#[include config/printers/prusa-mini/input-shaper-single.cfg]

# Uncomment the following line to use dual ADXL345s, one for each axis, so you can permanently 
# attach and wire them to your printer and run SHAPER_CALIBRATE once. 
# The second ADXL345 should be connected to your Raspberry Pi. See the wiring instructions here:
# https://www.klipper3d.org/Measuring_Resonances.html
# NOTE: You ONLY need to wire the ADXL345, everything else is already done for you.
#[include config/printers/prusa-mini/input-shaper-xy.cfg]

# Alternatively check https://www.klipper3d.org/Resonance_Compensation.html for manual input shaper calibration.


#############################################################################################################
### TOOLHEAD
### Pick your extruder and hotend
#############################################################################################################
# Extruder
#[include config/extruders/mk3s.cfg]
#[include config/extruders/tl-31.cfg]
[include config/extruders/prusa-mini.cfg]
#[include config/extruders/lgx-lite.cfg]
#[include config/extruders/bmg.cfg]
#[include config/extruders/lgx.cfg]
#[include config/extruders/orbiter.cfg]
#[include config/extruders/orbiter-1004.cfg] # Use this with the LDO-36STH20-1004AHG motor
#[include config/extruders/hemera.cfg]
#[include config/extruders/titan.cfg]

# Hotend
#[include config/hotends/dragonfly.cfg]
#[include config/hotends/rapido.cfg]
[include config/hotends/v6.cfg]
#[include config/hotends/revo.cfg]
#[include config/hotends/copperhead.cfg]
#[include config/hotends/mosquito.cfg]
#[include config/hotends/mosquito-magnum.cfg]
#[include config/hotends/dragon-standard-flow.cfg]
#[include config/hotends/dragon-high-flow.cfg]

#############################################################################################################
### MACROS
#############################################################################################################
[include config/macros.cfg]
# [include config/shell-macros.cfg]
[include config/printers/prusa-mini/macros.cfg]

#############################################################################################################
### MACRO CONFIGURATION
### Configure the behavior of RatOS macros
#############################################################################################################
[gcode_macro RatOS]
# Use absolute extrusion mode
# Set to True to use relative extrusion mode
variable_relative_extrusion: False
# Wait for extruder to reach 150 so an inductive probe (if present) is at a predictable temp. 
# Also allows the bed heat to spread a little, and softens any plastic that might be stuck to the nozzle.
# Set to False to disable
variable_preheat_extruder: True
# Calibrate the bed mesh in the START_PRINT macro.
# Set to false to skip BED_MESH_CALIBRATE, it will still load the BED_MESH 
# with the name "ratos", be sure to save your bed_mesh profile with that name.
# or override the _START_PRINT_BED_MESH macro to implement your own mesh handling logic.
variable_calibrate_bed_mesh: True
# Print a prime line at the end of the START_PRINT macro
# set to False to disable nozzle_priming.
variable_nozzle_priming: "primeline"
# Park in the back when waiting for the extruder to heat up
# set to "front" to park in the front, or "center" to park in the center.
variable_start_print_park_in: "front"
# Height to park it when waiting for extruder to heat.
variable_start_print_park_z_height: 50
# Skew profile to load before starting the print 
# uncomment this to use your calibrated skew correction profile.
variable_skew_profile: "my_skew_profile"
# Park in the back after the print has ended or was cancelled.
# set to "front" to park in the front, or "center" to park in the center.
variable_end_print_park_in: "back"
# Park in the back when the print is paused.
# set to "front" to park in the front, or "center" to park in the center.
variable_pause_print_park_in: "front"
# Set the speed for travel moves in RatOS Macros in mm/s.
variable_macro_travel_speed: 165

#############################################################################################################
### PRINTER CONFIGURATION
### Customize the defaults to your specific build
#############################################################################################################

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_2C003B000B47393339323834-if00

[tmc2209 extruder]
diag_pin: ^e_diag_pin
driver_SGTHRS: 100
sense_resistor: 0.22

[extruder]
pressure_advance: 0.04 #this is a reference value, should be calibrated on each printer
control = pid
pid_kp = 20.184
pid_ki = 0.836
pid_kd = 121.862

[respond]
default_type: command

[virtual_sdcard]
path:/home/pi/printer_data/gcodes

[pause_resume]
recover_velocity: 50.

[exclude_object]

[stepper_z]
position_max: 185

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

#[mcu USB-ADXL345]
#serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_36FFD7054858383038652443-if00

#[adxl345]
#cs_pin: USB-ADXL345:PA4
#spi_bus:spi1

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    90, 90, 120

#   The path of the local directory on the host machine to look for
#   g-code files. This is a read-only directory (sdcard file writes
#   are not supported). One may point this to OctoPrint's upload
#   directory (generally ~/.octoprint/uploads/ ). This parameter must
#   be provided.
#on_error_gcode:
#   A list of G-Code commands to execute when an error is reported.

